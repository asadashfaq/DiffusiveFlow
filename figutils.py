import numpy as np

"""
Useful stuff for plotting functions
"""

names = np.array(['AT', 'FI', 'NL', 'BA', 'FR', 'NO', 'BE', 'GB', 'PL', 'BG',
                  'GR', 'PT', 'CH', 'HR', 'RO', 'CZ', 'HU', 'RS', 'DE', 'IE',
                  'SE', 'DK', 'IT', 'SI', 'ES', 'LU', 'SK', 'EE', 'LV', 'LT'],
                 dtype='|S4')

# Node indices and names sorted after descending mean load
loadOrder = [18, 4, 7, 22, 24, 20, 8, 5, 2, 6, 1, 15, 0, 10, 14,
             9, 11, 12, 16, 21, 17, 19, 3, 26, 13, 29, 27, 23, 28, 25]

loadNames = np.array(['DE', 'FR', 'GB', 'IT', 'ES', 'SE', 'PL', 'NO', 'NL',
                      'BE', 'FI', 'CZ', 'AT', 'GR', 'RO', 'BG', 'PT', 'CH',
                      'HU', 'DK', 'RS', 'IE', 'BA', 'SK', 'HR', 'LT', 'EE',
                      'SI', 'LV', 'LU'], dtype='|S4')

# Node indices and names ordered after descending node degree
degreeOrder = [18, 0, 4, 22, 20, 17, 16, 13, 2, 8, 12, 15, 5, 7, 9,
               14, 21, 23, 26, 28, 10, 24, 6, 3, 27, 1, 19, 11, 25, 29]

degreeNames = np.array(['DE', 'AT', 'FR', 'IT', 'SE', 'RS', 'HU', 'HR', 'NL',
                        'PL', 'CH', 'CZ', 'NO', 'GB', 'BG', 'RO', 'DK', 'SI',
                        'SK', 'LV', 'GR', 'ES', 'BE', 'BA', 'EE', 'FI', 'IE',
                        'PT', 'LU', 'LT'], dtype='|S4')

linkNames = ['AT-CH', 'AT-CZ', 'AT-HU', 'AT-DE', 'AT-IT', 'AT-SI', 'FI-SE',
             'FI-EE', 'NL-NO', 'NL-BE', 'NL-GB', 'NL-DE', 'BA-HR', 'BA-RS',
             'FR-BE', 'FR-GB', 'FR-CH', 'FR-DE', 'FR-IT', 'FR-ES', 'NO-SE',
             'NO-DK', 'GB-IE', 'PL-CZ', 'PL-DE', 'PL-SE', 'PL-SK', 'BG-GR',
             'BG-RO', 'BG-RS', 'GR-IT', 'PT-ES', 'CH-DE', 'CH-IT', 'HR-HU',
             'HR-RS', 'HR-SI', 'RO-HU', 'RO-RS', 'CZ-DE', 'CZ-SK', 'HU-RS',
             'HU-SK', 'DE-SE', 'DE-DK', 'DE-LU', 'SE-DK', 'IT-SI', 'EE-LV',
             'LV-LT']

# Sligt modification of matplotlib built in color maps.
# Lowest value is now completely white
Blues_data = {'blue': [(0.0, 1.0, 1.0),
                       (0.125, 0.9686274528503418, 0.9686274528503418),
                       (0.25, 0.93725490570068359, 0.93725490570068359),
                       (0.375, 0.88235294818878174, 0.88235294818878174),
                       (0.5, 0.83921569585800171, 0.83921569585800171),
                       (0.625, 0.7764706015586853, 0.7764706015586853),
                       (0.75, 0.70980393886566162, 0.70980393886566162),
                       (0.875, 0.61176472902297974, 0.61176472902297974),
                       (1.0, 0.41960784792900085, 0.41960784792900085)],

              'green': [(0.0, 1.0, 1.0),
                        (0.125, 0.92156863212585449, 0.92156863212585449),
                        (0.25, 0.85882353782653809, 0.85882353782653809),
                        (0.375, 0.7921568751335144, 0.7921568751335144),
                        (0.5, 0.68235296010971069, 0.68235296010971069),
                        (0.625, 0.57254904508590698, 0.57254904508590698),
                        (0.75, 0.44313725829124451, 0.44313725829124451),
                        (0.875, 0.31764706969261169, 0.31764706969261169),
                        (1.0, 0.18823529779911041, 0.18823529779911041)],

              'red': [(0.0, 1.0, 1.0),
                      (0.125, 0.87058824300765991, 0.87058824300765991),
                      (0.25, 0.7764706015586853, 0.7764706015586853),
                      (0.375, 0.61960786581039429, 0.61960786581039429),
                      (0.5, 0.41960784792900085, 0.41960784792900085),
                      (0.625, 0.25882354378700256, 0.25882354378700256),
                      (0.75, 0.12941177189350128, 0.12941177189350128),
                      (0.875, 0.031372550874948502, 0.031372550874948502),
                      (1.0, 0.031372550874948502, 0.031372550874948502)]}
