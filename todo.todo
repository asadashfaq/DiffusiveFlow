Diffusive iterator TODO:

    Aggregation of entire time series:
        ☐ figure out how to handle flows of different colors in different directions on the same link

    Flow tracing:
        ✔ Add absolute color contributions in each iteration @done(2015-02-10 15:59) @project(Flow tracing)
        ✘ Normalise color vectors after iteration end: sum of each vector is unity @cancelled(2015-02-10 15:59) @project(    Flow tracing)
        ✔ direction: import/export @done(2015-02-16 13:40) @project(Flow tracing)

    Fractional sinks:
        ✔ introduce the lambda parameter so sinks will only get a fraction of what is available @done(2015-02-17 13:20) @project(Fractional sinks)

    Plotting:
        ☐ sort nodes after node degree
        ✔ sort nodes after mean load and mark sources and sinks for given time step @done(2015-02-20 23:01) @project(Plotting)
        ✔ Compare node power mix of diffusive flow with up/downstream approach @done(2015-02-16 12:07) @project(Plotting)
        ✔ Compare link power mix of diffusive flow with up/downstream approach @done(2015-02-16 13:26) @project(Plotting)
        ✔ Compare power mixes as function of fractional sinks @done(2015-02-19 15:36) @project(Plotting)
＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿
Archive:

    ✔ diagonal is source/sink strength of node i @done(2015-02-06 17:00) @project(Flow tracing)
    ✔ each row of P+ contains contributions from all other nodes to node i's injection @done(2015-02-06 17:00) @project(Flow tracing)
    ✔ sum of each row in P is passed on in next iteration step @done(2015-02-06 17:00) @project(Flow tracing)
    ✔ each row of P- contains contributions from all other nodes to node i's power mix @done(2015-02-06 17:00) @project(Flow tracing)
    Power flow solution: @done(2015-02-06 16:31) @project(Power flow solution)
    ✔ use the incidence matrix to keep track of the direction of flow on the links during iterations @done(2015-02-06 16:31) @project(Power flow solution)
